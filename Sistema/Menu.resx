<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAANJQTFRF////
        UI7yQnbJITxmRIjxSovyP3TISIryPXPIPYXxNW/H8/b+iK71vtH5ACtcYZfzGzhjMGzGusnoVoLNR3nK
        scLl5Ov3qcX4AC1dSVx8n7731uP8ytv7jLL2Q1d55O39daT0EDJgn7bh7fP+t875ACJXeJrWfqn1bZ/0
        k67eX4nQhKPZ0t3x2+T0pbvjUoHNc5fV0tbeWpTzipWpyNTtZY3Rz9776evvdYKanae4wMbRN050qrLA
        V2iGusDMMElwAB9XYnKO4eTplp+wanmTl7n3hbEATwAADtRJREFUeF7tnXlb4soSxgMkIYtA4iAyuCAi
        AiIquI7buc4cv/9Xuk8nkHRXVy8J6MC9+f11xg6aN9VdXVVd4RhGQUFBQUFBQUFBQUFBQUFBQUFBQUFB
        QUFBgT67zR8J1xdw9H+BsWenOC04/D/AjVNOCS/h8PbjX9uUQm8Pjm8/fYdROIHj289lSAksO/dwfPvZ
        82iF9rUPL9h6xrSjKZe9Prxgyzi1obNkXCniTMfbtYGchnZ4yv6oSTuactm7YkZbF55T3iKJp8SrePfp
        HU+v7lkTlu3m5C5dinuOUy47za2RGAkslx1nN/737oXnAYHlsu14zck0vuA8jAy8NRIXAstlO5z4hn/l
        eOwETbCd8OLSMC7LS/lbMlETgWSm/rhqivRFOOE5fb29DRLpGy6Xbak+AlmB1L82f6KyArOz8RLHKwok
        a3HhfjaU2CmuBNxIN4w7lQ1t1SNwNj39HzMBNoPteJ7jOI7neUwmxWDbG74ODeOC29sjbM+7GO9eTlut
        1vTu6rwZ4peVvUWUsMFMsf3BDq+vGNv4lxM+zCFz9Jy+akPZ45ai7V0jlumPETva8KqNBORJZccRFGVa
        N9D1cjnVZuKziZJ3IfYdV+yUdjZ7o0g5pY3oSVfWJe1V7fKWlDYYG6qKai1aorclNjyltkS5BQm077Wd
        7TAiZRWdAIUOg7bDiFTZUO94ggqDbAcObiI/UhNq1u6pen+IbJybxpSyiMYcJVDz1LmBg5sH5WfCOzgo
        4CIxom1vvq+5T+/2Go6JoIzo6T6Vv4E/3T29aaa7veYqJFA7qHMxubprrd+S3eEOzxG8Sszu+PzCCdnE
        L8PRBH2oYTteGDbvJ2wysjI110LQv0XHc2D2bmc4QGOP3iKZzprdaqda4jEP4GVCwKkEwRnDi8T4Zf7z
        a86FdywojyiswcuEIAoz3WHqTfN9Xk0DqiNUO/AyIZjCLFXBcz4ZXrNCE6ojWEN4mRBeoV7EtgScnxLW
        q7DrQnURDXidEERhWd9PsfnIgvUqrKE2LJW0bxJR2NT+8HcoRF1pqeRqLyVEYabC55fP0iHmSrM4U15h
        OdM6nHy1wjnUFqPvTBGFmepmsD63boW+YBnqO1NEYYawlEkqk89nViiZcVOBQpkz7TIBD6LQUdSgaFq8
        o8mucN+dC4OwQ5FCVxjj11wmpmtGxy2MTP3kyTB2gUJyfJM1Lt13S5a7D3+6QOBKSyVX8FD8HbdUqlKD
        /vTuanLf9EKqchZqe2I6pHG80Lu+n+xdZnFURGBkJfME36MErlToTB/m0SOhJUb4rbvTdL7qh94+XcbY
        u+wLZ46YWGCpZJUO4ZDR3R8BXTTDM/6hdJaT2oISGXPYHhwTcZVO0kzRbMp+GpS5R8wD6u7PXVNkQYJl
        uqMa+5FGumo5KzJLSrv6mebNdhOOabG0YITZSO/qcGiKfAyFZZaOuslnalX6gfASfep2Hd7+GFTIpj+z
        aRiB5IYXDqc2klqPpmoOYyn+Dngk/ESlNm+9DYM+usjgnVKoKbogcji1ubY+gmWOuoZxUOK8LieRrkho
        eXzqXFy3wsrACyyVLOtshPxYjuUedbAPcROVytdtDccxofZC7QorBZiiSzLZb4nFGTAClnPooxbbVi1F
        pq0thwkFAtcLnKh0GK3q4mISwxzlYGyKfgFgojLJnsP1Q9NM6DJijs7EbxIIJN6xQaYdsg3PFK0L9tLM
        7yh8yxSNoSYqaFQgk4/0ySKcsp2XWWKEmP53WZAoHCV/FklmHe+e14j21mZKmw3j7PtsaCZBD98wRHDC
        5uk0Df783QmdhaTYzWxRtzBnWDfu2fJPTkVNebZHjltOr65Ox+dYZ/sCvTAowf8mhdW02iFo3IuwF42J
        oocQkTG1f8iwFK2qmcQBllm1MjydeTK1JM2Xmtheti3jU3MpVs35Sad2sMg9/e7B2dHI0g18zIfln/Nh
        o1oOwozpxUjjLi13/vnAr/B+bcfSeUDmZ/oZ4TLURtVExdHFY0kKyz3hE/8F/tncVT0iiynIwfbSrILV
        TVQcZ/KlaFV30uwW42GksGOV/TxrRUfuVsiyY7b9zBYknMiMYA7V6c0hVbbgMZONYgEl0fbG/bGHbnwx
        dvjjbkqFbjksSGYavKcUy8JraQAfzQtjqI1iSSLRKZMIpSXSSF57iraG8dI/5bKgrN5rDnn3goPk9kuQ
        XxFLtMObxZhPXl6D+hzPmSxDtLt4puazIEFQ8F3Wa7QY4o8JZr8xRCLb++zvgkjAuaEjUP/Gs1cQaExR
        hVWhB0XBd9Y5vCxm6oSw9xmcvcDQZS8Mc05RAtpowZVXVKDJpqAoblxy2zboReCKalPuE/ocYE8fVh40
        wNNNeJUI9hx7vd3AWFiDrx8FSTWf/kW6i5k9XrJ/wPEVOEBmlyuYXApgOZiQRt1yWkzeuNZ3Y5Ad39Q+
        vQY0kN+l+bDYxq581XscpFXGOoEX6dLnvTIblkpgGrugK12FT+Sm5JGoDKQwIjpFhTDOVKMWrovPt1lo
        OwcMfs5bmm2o49CjUJXC9eFDNu1phdLlfl/JhdfgTPdo4Gh++N0+zchzccTNel1f8zXwiUV+NxPDV2H1
        u26+ggduUpnZwlGeI25WYPnFt8F50tVWIYHfflac9znx+wdnneGce94rOdIYxJ02djq17vrco4r+Qa1z
        0rBck+kpWGCufh/InhgVW0ujISlIwsvXTPfzZF4yUW0R1AlKbvrwly6xIp3zYd6YUIszRfFvDZMUT1Yo
        LHE33BoQtTMvcfMHbCmCqkjCX1VowQ/kgd+CWP6mwlW3+xgkw2CQK3wc9IIgCHpB7z+PcEwDhcIqdcSw
        AvDXAuQKZ/XKgvoMjmmgUMgVqPOhcDVyhe/tpcL2KxzTQKVw1ZAthg/nGeQKb3tLhb1bOKaBSqFmtqpA
        4UzlCt+CpcLgJxzTQKFwLZuFqK6YIFf4kiis1OGYBiqF64mpsLiNAip8eqOc5mMqsDKgf/72lP5DwiYq
        fKr3eu/Jv34ly7BS6f1Kfvzc69W1JKoU/oVZ+lSvVIJBfPfPH4PEkxLag49Y+9MgqFS0JCoU/gVPQwQS
        c73MjNfjOmXAmKD+8mrMjmPdOhJVCtezWyBpPg2t8Ha5vwfBcZ1agilB+zhYDmhIVCisfveOv7BgLCX9
        TxZqQC1RpXA9qRv8tYBUIS1QD6VEhcL1lMX6chNSCj+4daei98H+LQ6FQv3jPhnogSRFqvBRPDVxgkCV
        b6gUrmW7UGwW9Dp8ZjYHNYNn5i8h1LhSH8taXA1fbGNhfGkmiW3VKjSMg5O5ixfZYtaRAgsrUVHJzXUb
        TBMLFYYqCY6pD4rxSTGxVBUU3KrSqFgLdCVEvZvzYacGl8HvDM4myJISx0XTEidyDdOU7zy25o1h55Dq
        cqb5qW1ETRMy9LnoY/WCaZ8zocm+vsfyzm+JQa9er9d7vPJ6jqSfPz5cOTRFglKJQOMfKCQYHP95n82e
        /xyTaJsdeoGfVoOcrq246fNvtku91zM0YfstWWy/P+BgXblZ8PCLZkUj8k010vIWiGqCHjMRX8FUDVQR
        DQLv+FZbiUjEBlN6GhjUQCM9A087YId1QDYvd5UUaodbhbJJ+vjKKuBdySsbEbR/qaI2HqzyJ3noCnjP
        JXhgj7PX27c2m9FXgjd4GV16i+gN6se3r89ZdCJNX9UdeJEuvOMSNWD+M2jz2wFW5J4N4FVBr13PVIXD
        OrVkvkEGEpEKzuuOOXmi+igW1gUVeJWMQ96Ief0p70eFUx5TiNe4/yBhXTaFmBHhKwR6YEVEURMgprCd
        1hQp0nOMlIwKEe9QsubZK6f8xkPATYgqxJYhfRaVklEhWjjKLhEVKFiF363wgNvDoraCbBMVf/cGd6Qi
        hV81S419TGHGZn28VV/cyIkp/DJPg5qQQL90JqcvevlJ2GKFKcywWwTwKimYL40xGyITsNTEr1uKntIL
        SQDhvWMLkdvxA7Lj9+BlMo4Ej59guZ8CX0gxlX6HhuCgwJ+9//k4roDMAjEiKAH0Ksdvt++zLFEbtuFT
        mKV9ucbukepVUsnnH0FgXU+P0xb8ApH3axZtEUhuATBLn+K5ejCsilbxElluYfgwewLuFDrSHNkTEkly
        VM0R8m1QhnHQ0foOG+GeSPgXrMX6H3r0F9gLe//So1qoytMLrKrb+KxNky/Z8vsP+zslV2W+BenXDfBw
        jqT+M3E3sze42cMEWQ3Sdy6karpWY3RyMjwZjeZm+ua6GmnVgK9E1Y9v32ez91v+PDFHOZHvoFWw+BJo
        +GMFoi2DgFYT2/U6kj4iJQAVso1ireB5fsxXVoSxpOKrEG4ZM22BGav6eFnsy6gKtwxuHUrIXBH+tkkq
        ed3vCckcxPTUp2ss3yZR+NoM4mekDNAES8I3SRQKhAVhJepTbsi3SBROUeMNyf3k9JCSqhyBxFxOSLBP
        SraKpF9ImzqaJUvBJFrVzznyYwXmCfYesHiKEmiJwglLDeQQiEk05weGv6/13TMp5vyQ1BM5M0oFMl1f
        P7koLSKo/0zCm1wCeYlu/NKn3zE1I2vyrUrzuExOfz1rhHgNLlhIbL/8Nt5fuIPfIKj/8278Xnbu5RMI
        JFql9J72G7xNEMzqKF1qbN1bYUECkRgs7n32VGG7Lyv/xtnELbFvboGMRPBlyQ9Hqq/BrLqNDpMdHcZf
        kxyhIZDcfa+SZEU+fd7Wfk2CvedKbwWBqUTkC6/9wyOJZzUbHe6Iwx8uCyNaAg3jlumCpkw4oKLZx4+s
        8QxLLJG4GAxhIUBwSHUWt+oo1yAKVT1sw7FVIBJN0XvlSHtFjOiMqkvqp5oWhKz4NoKYI5dyMQD0SIIg
        PqLvuDkFrvpGiYR9rNgUI2ynFB5LGMZhToGrvhWUD75HJmbV3huU2YC8ukYYZEx4VwFKW7CmV91YHl9+
        LnjJmkesgMCZClzpNiJwprpfW7IFCJxphv+13KaDNN0QGsLNYuvwUYXSM5dtg/+enq9ypX8LvklTP7De
        DlBnKopKtxLMmWb5v3RuPt15g0d2aFZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUPD/yX8BvXYrYIthpBoA
        AAAASUVORK5CYII=
</value>
  </data>
</root>